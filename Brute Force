Server:

import socket
import itertools
import string

HOST = 'localhost'
PORT = 12290
MAX_ATTEMPTS = 2000000

def bruteforce_attack(password):
    chars = string.printable.strip()
    attempts = 0
    for length in range(1, len(password) + 1):
        for guess in itertools.product(chars, repeat=length):
            attempts += 1
            if attempts >= MAX_ATTEMPTS:
                return attempts, None
            guess_str = ''.join(guess)
            if guess_str == password:
                return attempts, guess_str
    return attempts, None

# Server setup
with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server_socket:
    server_socket.bind((HOST, PORT))
    server_socket.listen()
    print(f"Server started, listening on {HOST}:{PORT}")

    while True:
        conn, addr = server_socket.accept()
        with conn:
            print(f"Connected by {addr}")
            password = conn.recv(1024).decode()
            if not password:
                break

            attempts, guess = bruteforce_attack(password)
            response = (
                f"Password cracked in {attempts} attempts: {guess}" 
                if guess 
                else f"Failed after {attempts} attempts"
            )
            conn.sendall(response.encode())
        print(f"Client {addr} disconnected")

if __name__ == "__main__":
    start_server()


Client:

import socket

HOST = 'localhost'
PORT = 12290

def start_client():
    # Connect to the server
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as client_socket:
        client_socket.connect((HOST, PORT))
        
        # Send the password to the server
        password = input("Enter the password to be cracked: ")
        client_socket.sendall(password.encode())
        
        # Receive the response from the server
        response = client_socket.recv(1024).decode()
        print("Server response:", response)

if __name__ == "__main__":
    start_client()
